#version 450 core
//use the Framebuffer vertex shader

out vec4 color;
in vec2 TexCoords;

uniform sampler2D screenTexture;
const float offset = 1.0 / 900.0;
void main() {

    //3x3 kernel
    vec2 offsets[9] = vec2[] (
        vec2(-offset, offset),
        vec2(0.0, offset),
        vec2(offset, offset),
        vec2(-offset, 0.0),
        vec2(0.0, 0.0),
        vec2(offset, 0.0),
        vec2(-offset, -offset),
        vec2(0.0, -offset),
        vec2(offset, offset)
    );

    float kernel[9] = float[](
        1,2,1,
        2,4,2,
        1,2,1
    );

    vec3 sampleTex[9];
    for (int i = 0; i < 9; i++) {
        kernel[i] = kernel[i] / 16;
        sampleTex[i] = vec3(texture(screenTexture, TexCoords.st + offsets[i]));
    }

    vec3 col = vec3(0.0);
    for (int i = 0; i < 9; i++) {
        col += sampleTex[i] * kernel[i];
    }
    
    //color =  vec4(col, 1.0);
    color = texture(screenTexture, TexCoords);
}